{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactJS\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alertmsg from \"./components/Alertmsg\";\n// import About from \"./components/About\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n  const changeMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#0b0632\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark mode has been active\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"#0b0632\";\n      showAlert(\"Light mode has been active\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode1: mode,\n      change_Mode: changeMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alertmsg, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n      mode1: mode,\n      showAlert: showAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true)\n  // <Router>\n  //   <div>\n  //     <Navbar title=\"TextUtils\" mode1={mode} change_Mode={changeMode} />\n  //     <Alertmsg alert={alert} />\n  //     <TextForm mode1={mode} showAlert={showAlert} />\n  //     <Routes>\n  //       <Route exact path=\"/\" element={<TextForm mode1={mode} showAlert={showAlert} />} />\n  //       <Route exact path=\"/about\" element={<About mode1={mode} />} />\n  //     </Routes>\n  //   </div>\n  // </Router>\n  ;\n}\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","TextForm","Alertmsg","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","changeMode","document","body","style","backgroundColor","color"],"sources":["F:/reactJS/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TextForm from \"./components/TextForm\";\r\nimport Alertmsg from \"./components/Alertmsg\";\r\n// import About from \"./components/About\";\r\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type,\r\n    });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1000);\r\n  };\r\n\r\n  const changeMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#0b0632\";\r\n      document.body.style.color = \"white\";\r\n      showAlert(\"Dark mode has been active\", \"success\");\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      document.body.style.color = \"#0b0632\";\r\n      showAlert(\"Light mode has been active\", \"success\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar title=\"TextUtils\" mode1={mode} change_Mode={changeMode} />\r\n        <Alertmsg alert={alert} />\r\n        <TextForm mode1={mode} showAlert={showAlert} />\r\n    </>\r\n    // <Router>\r\n    //   <div>\r\n    //     <Navbar title=\"TextUtils\" mode1={mode} change_Mode={changeMode} />\r\n    //     <Alertmsg alert={alert} />\r\n    //     <TextForm mode1={mode} showAlert={showAlert} />\r\n    //     <Routes>\r\n    //       <Route exact path=\"/\" element={<TextForm mode1={mode} showAlert={showAlert} />} />\r\n    //       <Route exact path=\"/about\" element={<About mode1={mode} />} />\r\n    //     </Routes>\r\n    //   </div>\r\n    // </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C;AACA;AAAA;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,SAAS,GAAG,CAACC,OAAO,EAAEC,IAAI,KAAK;IACnCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMM,UAAU,GAAG,MAAM;IACvB,IAAIT,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,OAAO;MACnCV,SAAS,CAAC,2BAA2B,EAAE,SAAS,CAAC;IACnD,CAAC,MAAM;MACLH,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,SAAS;MACrCV,SAAS,CAAC,4BAA4B,EAAE,SAAS,CAAC;IACpD;EACF,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,KAAK,EAAC,WAAW;MAAC,KAAK,EAAEJ,IAAK;MAAC,WAAW,EAAES;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eAChE,QAAC,QAAQ;MAAC,KAAK,EAAEP;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1B,QAAC,QAAQ;MAAC,KAAK,EAAEF,IAAK;MAAC,SAAS,EAAEI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;EAEnD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAAC,GA9CQL,GAAG;AAAA,KAAHA,GAAG;AAgDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}