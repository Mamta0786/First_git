{"ast":null,"code":"import _slicedToArray from\"F:/reactJS/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"./App.css\";import React,{useState}from\"react\";import Navbar from\"./components/Navbar\";import TextForm from\"./components/TextForm\";import Alertmsg from\"./components/Alertmsg\";// import About from \"./components/About\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(\"light\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){setAlert(null);},1000);};var changeMode=function changeMode(){if(mode===\"light\"){setMode(\"dark\");document.body.style.backgroundColor=\"#0b0632\";document.body.style.color=\"white\";showAlert(\"Dark mode has been active\",\"success\");}else{setMode(\"light\");document.body.style.backgroundColor=\"white\";document.body.style.color=\"#0b0632\";showAlert(\"Light mode has been active\",\"success\");}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",mode1:mode,change_Mode:changeMode}),/*#__PURE__*/_jsx(Alertmsg,{alert:alert}),/*#__PURE__*/_jsx(TextForm,{mode1:mode,showAlert:showAlert})]})// <Router>\n//   <div>\n//     <Navbar title=\"TextUtils\" mode1={mode} change_Mode={changeMode} />\n//     <Alertmsg alert={alert} />\n//     <TextForm mode1={mode} showAlert={showAlert} />\n//     <Routes>\n//       <Route exact path=\"/\" element={<TextForm mode1={mode} showAlert={showAlert} />} />\n//       <Route exact path=\"/about\" element={<About mode1={mode} />} />\n//     </Routes>\n//   </div>\n// </Router>\n;}export default App;","map":{"version":3,"names":["React","useState","Navbar","TextForm","Alertmsg","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","changeMode","document","body","style","backgroundColor","color"],"sources":["F:/reactJS/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alertmsg from \"./components/Alertmsg\";\n// import About from \"./components/About\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n\n  const changeMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#0b0632\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark mode has been active\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"#0b0632\";\n      showAlert(\"Light mode has been active\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode1={mode} change_Mode={changeMode} />\n        <Alertmsg alert={alert} />\n        <TextForm mode1={mode} showAlert={showAlert} />\n    </>\n    // <Router>\n    //   <div>\n    //     <Navbar title=\"TextUtils\" mode1={mode} change_Mode={changeMode} />\n    //     <Alertmsg alert={alert} />\n    //     <TextForm mode1={mode} showAlert={showAlert} />\n    //     <Routes>\n    //       <Route exact path=\"/\" element={<TextForm mode1={mode} showAlert={showAlert} />} />\n    //       <Route exact path=\"/about\" element={<About mode1={mode} />} />\n    //     </Routes>\n    //   </div>\n    // </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"uGAAA,MAAO,WAAW,CAClB,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAOC,OAAM,KAAM,qBAAqB,CACxC,MAAOC,SAAQ,KAAM,uBAAuB,CAC5C,MAAOC,SAAQ,KAAM,uBAAuB,CAC5C;AACA;AAAA,6IAEA,QAASC,IAAG,EAAG,CACb,cAAwBJ,QAAQ,CAAC,OAAO,CAAC,wCAAlCK,IAAI,eAAEC,OAAO,eACpB,eAA0BN,QAAQ,CAAC,IAAI,CAAC,yCAAjCO,KAAK,eAAEC,QAAQ,eAEtB,GAAMC,UAAS,CAAG,QAAZA,UAAS,CAAIC,OAAO,CAAEC,IAAI,CAAK,CACnCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,UAAM,CACfL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,GAAMM,WAAU,CAAG,QAAbA,WAAU,EAAS,CACvB,GAAIT,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,CAAG,OAAO,CACnCV,SAAS,CAAC,2BAA2B,CAAE,SAAS,CAAC,CACnD,CAAC,IAAM,CACLH,OAAO,CAAC,OAAO,CAAC,CAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,CAAG,SAAS,CACrCV,SAAS,CAAC,4BAA4B,CAAE,SAAS,CAAC,CACpD,CACF,CAAC,CAED,mBACE,wCACE,KAAC,MAAM,EAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAEJ,IAAK,CAAC,WAAW,CAAES,UAAW,EAAG,cAChE,KAAC,QAAQ,EAAC,KAAK,CAAEP,KAAM,EAAG,cAC1B,KAAC,QAAQ,EAAC,KAAK,CAAEF,IAAK,CAAC,SAAS,CAAEI,SAAU,EAAG,GAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,CAEJ,CAEA,cAAeL,IAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}