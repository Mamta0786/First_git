{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactJS\\\\my-app\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// const [count, setCount] = useState(0);\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const [text, setText] = useState('');\n  const textHandle = elem => {\n    setText(elem.target.value);\n    // console.log(\"onchange\")\n  };\n\n  const convertUpCase = () => {\n    setText(text.toUpperCase());\n  };\n  const convertLoCase = () => {\n    setText(text.toLowerCase());\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container my-5 bg-${props.mode1} text-${props.mode1 === 'light' ? 'dark' : 'light'}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Enter your Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"text\",\n          rows: \"8\",\n          value: text,\n          onChange: textHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: convertUpCase,\n        children: \"Convert into UpperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: convertLoCase,\n        children: \"Convert into LowerCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text === '' ? '0' : text.split(\" \").length, \" word and \", text.length, \" character.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text === '' ? 'plz write text in above box to see the preview' : text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","TextForm","props","text","setText","textHandle","elem","target","value","convertUpCase","toUpperCase","convertLoCase","toLowerCase","mode1","split","length"],"sources":["F:/reactJS/my-app/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// const [count, setCount] = useState(0);\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState('');\r\n    const textHandle = (elem) => {\r\n        setText( elem.target.value)\r\n        // console.log(\"onchange\")\r\n\r\n    }\r\n    const convertUpCase = () => {\r\n        setText(text.toUpperCase())\r\n    }\r\n    const convertLoCase = () => {\r\n        setText(text.toLowerCase())\r\n    }\r\n  return (\r\n    <>\r\n      <div className={`container my-5 bg-${props.mode1} text-${props.mode1==='light'?'dark':'light'}`}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"text\">Enter your Text</label>\r\n          <textarea className=\"form-control\" id=\"text\" rows=\"8\" value={text} onChange = {textHandle}></textarea>\r\n        </div>\r\n          </div>\r\n          <div className=\"container\">\r\n              <button className=\"btn btn-primary mx-1\" onClick={convertUpCase}>Convert into UpperCase</button>\r\n              <button className=\"btn btn-primary mx-1\" onClick={convertLoCase}>Convert into LowerCase</button>\r\n          </div>\r\n          <div className=\"container my-3\">\r\n              <p>{text === ''?'0':text.split(\" \").length} word and {text.length} character.</p>\r\n              <h2>Preview</h2>\r\n              <p>{text===''?'plz write text in above box to see the preview':text}</p>\r\n          </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA;AAAA;AAEA,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMK,UAAU,GAAIC,IAAI,IAAK;IACzBF,OAAO,CAAEE,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC;IAC3B;EAEJ,CAAC;;EACD,MAAMC,aAAa,GAAG,MAAM;IACxBL,OAAO,CAACD,IAAI,CAACO,WAAW,EAAE,CAAC;EAC/B,CAAC;EACD,MAAMC,aAAa,GAAG,MAAM;IACxBP,OAAO,CAACD,IAAI,CAACS,WAAW,EAAE,CAAC;EAC/B,CAAC;EACH,oBACE;IAAA,wBACE;MAAK,SAAS,EAAG,qBAAoBV,KAAK,CAACW,KAAM,SAAQX,KAAK,CAACW,KAAK,KAAG,OAAO,GAAC,MAAM,GAAC,OAAQ,EAAE;MAAA,uBAC9F;QAAK,SAAS,EAAC,YAAY;QAAA,wBACzB;UAAO,OAAO,EAAC,MAAM;UAAA,UAAC;QAAe;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC7C;UAAU,SAAS,EAAC,cAAc;UAAC,EAAE,EAAC,MAAM;UAAC,IAAI,EAAC,GAAG;UAAC,KAAK,EAAEV,IAAK;UAAC,QAAQ,EAAIE;QAAW;UAAA;UAAA;UAAA;QAAA,QAAY;MAAA;QAAA;QAAA;QAAA;MAAA;IAClG;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB;QAAQ,SAAS,EAAC,sBAAsB;QAAC,OAAO,EAAEI,aAAc;QAAA,UAAC;MAAsB;QAAA;QAAA;QAAA;MAAA,QAAS,eAChG;QAAQ,SAAS,EAAC,sBAAsB;QAAC,OAAO,EAAEE,aAAc;QAAA,UAAC;MAAsB;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9F,eACN;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC3B;QAAA,WAAIR,IAAI,KAAK,EAAE,GAAC,GAAG,GAACA,IAAI,CAACW,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,EAAC,YAAU,EAACZ,IAAI,CAACY,MAAM,EAAC,aAAW;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI,eACjF;QAAA,UAAI;MAAO;QAAA;QAAA;QAAA;MAAA,QAAK,eAChB;QAAA,UAAIZ,IAAI,KAAG,EAAE,GAAC,gDAAgD,GAACA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACtE;EAAA,gBACT;AAEP;AAAC,GAhCuBF,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}