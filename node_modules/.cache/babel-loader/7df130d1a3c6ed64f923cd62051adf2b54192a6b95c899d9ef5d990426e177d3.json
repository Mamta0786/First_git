{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactJS\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const changeMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      showMode();\n    } else {\n      setMode('light');\n      showMode();\n    }\n  };\n  const showMode = () => {\n    if (mode === 'light') {\n      setMode({\n        backgroundColor: 'white',\n        color: 'black'\n      });\n    } else {\n      setMode({\n        backgroundColor: 'black',\n        color: 'white'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: \"mode\",\n      change_Mode: changeMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Vs8mkvwR7CZ7J6LLj80enWdttac=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","App","mode","setMode","changeMode","showMode","backgroundColor","color"],"sources":["F:/reactJS/my-app/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const changeMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      showMode()\n    }\n    else {\n      setMode('light')\n      showMode()\n    }\n  }\n  const showMode = () => {\n    if (mode === 'light') {\n      setMode({\n        backgroundColor: 'white',\n        color: 'black'\n      })\n    }\n    else {\n      setMode({\n        backgroundColor: 'black',\n        color: 'white'\n      })\n    }\n  }\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode=\"mode\" change_Mode={changeMode} />\n      <TextForm />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAExC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAMI,UAAU,GAAG,MAAM;IACvB,IAAIF,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfE,QAAQ,EAAE;IACZ,CAAC,MACI;MACHF,OAAO,CAAC,OAAO,CAAC;MAChBE,QAAQ,EAAE;IACZ;EACF,CAAC;EACD,MAAMA,QAAQ,GAAG,MAAM;IACrB,IAAIH,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC;QACNG,eAAe,EAAE,OAAO;QACxBC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC,MACI;MACHJ,OAAO,CAAC;QACNG,eAAe,EAAE,OAAO;QACxBC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;EACF,CAAC;EACD,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,KAAK,EAAC,WAAW;MAAC,IAAI,EAAC,MAAM;MAAC,WAAW,EAAEH;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACjE,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACX;AAEP;AAAC,GAhCQH,GAAG;AAAA,KAAHA,GAAG;AAkCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}